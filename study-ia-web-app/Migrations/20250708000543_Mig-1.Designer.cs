// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using study_ia_web_app.Data;

#nullable disable

namespace study_ia_web_app.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250708000543_Mig-1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("study_ia_web_app.Entities.Alternativa", b =>
                {
                    b.Property<int>("AlternativaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlternativaId"));

                    b.Property<bool>("EsCorrecta")
                        .HasColumnType("bit");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlternativaId");

                    b.HasIndex("PreguntaId");

                    b.ToTable("Alternativas");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Archivo", b =>
                {
                    b.Property<Guid>("ArchivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextoExtraido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ArchivoId");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.PlanEstudio", b =>
                {
                    b.Property<Guid>("PlanEstudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArchivoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("PlanEstudioId");

                    b.HasIndex("ArchivoId");

                    b.ToTable("PlanEstudios");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Pregunta", b =>
                {
                    b.Property<int>("PreguntaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreguntaId"));

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("PreguntaId");

                    b.HasIndex("QuizId");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.PuntoClave", b =>
                {
                    b.Property<Guid>("PuntoClaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResumenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PuntoClaveId");

                    b.HasIndex("ResumenId");

                    b.ToTable("Puntos");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<Guid>("ArchivoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaGenerado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isQuiz")
                        .HasColumnType("bit");

                    b.HasKey("QuizId");

                    b.HasIndex("ArchivoId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Resumen", b =>
                {
                    b.Property<Guid>("ResumenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArchivoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conclusion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaGenerado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Introduccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isResumen")
                        .HasColumnType("bit");

                    b.HasKey("ResumenId");

                    b.HasIndex("ArchivoId");

                    b.ToTable("Resumens");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.TareaEstudio", b =>
                {
                    b.Property<Guid>("TareaEstudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PlanEstudioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TareaEstudioId");

                    b.HasIndex("PlanEstudioId");

                    b.ToTable("TareasEstudios");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Alternativa", b =>
                {
                    b.HasOne("study_ia_web_app.Entities.Pregunta", null)
                        .WithMany("Alternativas")
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("study_ia_web_app.Entities.PlanEstudio", b =>
                {
                    b.HasOne("study_ia_web_app.Entities.Archivo", "Archivo")
                        .WithMany()
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Pregunta", b =>
                {
                    b.HasOne("study_ia_web_app.Entities.Quiz", null)
                        .WithMany("Preguntas")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("study_ia_web_app.Entities.PuntoClave", b =>
                {
                    b.HasOne("study_ia_web_app.Entities.Resumen", "Resumen")
                        .WithMany("PuntosClave")
                        .HasForeignKey("ResumenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resumen");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Quiz", b =>
                {
                    b.HasOne("study_ia_web_app.Entities.Archivo", "Archivo")
                        .WithMany()
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Resumen", b =>
                {
                    b.HasOne("study_ia_web_app.Entities.Archivo", "Archivo")
                        .WithMany("Resumenes")
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.TareaEstudio", b =>
                {
                    b.HasOne("study_ia_web_app.Entities.PlanEstudio", null)
                        .WithMany("Tareas")
                        .HasForeignKey("PlanEstudioId");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Archivo", b =>
                {
                    b.Navigation("Resumenes");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.PlanEstudio", b =>
                {
                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Pregunta", b =>
                {
                    b.Navigation("Alternativas");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Quiz", b =>
                {
                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("study_ia_web_app.Entities.Resumen", b =>
                {
                    b.Navigation("PuntosClave");
                });
#pragma warning restore 612, 618
        }
    }
}
